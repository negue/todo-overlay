{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "TaskList.svelte",
    "TimeDifference.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import TaskList from './TaskList.svelte';\nimport { createStore } from './items.store';\nimport ComfyJS from \"comfy.js\";\nimport { fillDefaults, queryStringToQueryOptions } from \"./utils\";\nimport { handleCommand } from './command.handler';\n// Query Options\n// - ChannelName to listen to\n// - listening command (default: todo)\nconst queryOptions = fillDefaults(queryStringToQueryOptions(location.search));\nconsole.warn({ queryOptions });\nconst { items, taskListOptions, currentHighlight, currentTimer } = createStore(queryOptions.command);\nComfyJS.onCommand = (user, command, message, flags, extra) => {\n    if ((flags.broadcaster || flags.mod) && command === queryOptions.command) {\n        // better state management?!\n        handleCommand(message, taskListOptions, items, currentHighlight, currentTimer);\n        console.log(`!${queryOptions.command} was typed in chat`, user, message, flags, extra);\n    }\n};\nComfyJS.Init(queryOptions.channelName);\n</script>\n\n<main>\n\n  <TaskList items={$items}\n            taskListName={$taskListOptions.name}\n            scrollingDuration={queryOptions.scrollingDuration}\n            scrollingInterval={queryOptions.scrollingInterval}\n            layout={queryOptions.layout}\n            highlightItemIndex={$currentHighlight}\n            showOnlyItemIndex={$currentTimer}\n  />\n</main>\n\n<!-- NES.css minified -->\n<link href=\"https://unpkg.com/nes.css@2.3.0/css/nes.min.css\" rel=\"stylesheet\"/>\n\n<!-- Press Start 2P - pixelated font <3 -->\n<link href=\"https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap\" rel=\"stylesheet\">\n\n<style>\n  body {\n    overflow: hidden;\n  }\n\n  * {\n    /* https://fonts.google.com/specimen/Press+Start+2P?query=Press+Start+2P */\n    font-family: 'Press Start 2P', Arial, sans-serif;\n  }</style>\n",
    "<script lang=\"ts\">import TimeDifference from './TimeDifference.svelte';\nimport { timeDifference } from \"./utils\";\n;\nimport * as animateScroll from \"svelte-scrollto\";\nimport { fade, fly } from 'svelte/transition';\nimport { onMount } from \"svelte\";\nexport let taskListName;\nexport let items;\nexport let highlightItemIndex = -1;\nexport let showOnlyItemIndex = -1;\nexport let scrollingInterval = 5000;\nexport let scrollingDuration = 2000;\nexport let layout = 'full';\n// TODO Either add scrolling up / down\n// TODO or reverse items list\nlet itemsListElement;\nonMount(() => {\n    var scrollToTop = false;\n    setInterval(() => {\n        if (scrollToTop) {\n            animateScroll.scrollToTop({\n                container: itemsListElement,\n                duration: scrollingDuration\n            });\n        }\n        else {\n            animateScroll.scrollToBottom({\n                container: itemsListElement,\n                duration: scrollingDuration\n            });\n        }\n        scrollToTop = !scrollToTop;\n    }, scrollingInterval);\n});\n</script>\n\n<div class=\"nes-container {layout === 'auto' ? 'auto-layout' : ''} is-dark with-title\">\n  <p class=\"title\">{taskListName}</p>\n\n  <div\n    class=\"items-holder {highlightItemIndex !== -1 ? 'currently-highlighting' : '' }\"\n    bind:this={itemsListElement}>\n\n    {#each items as item, _index}\n\n      {#if showOnlyItemIndex === -1 || showOnlyItemIndex === _index }\n        <label\n          in:fade={{ duration: 500 }}\n          out:fly={{ x: -500, duration: 500 }}\n          class=\"entry {item.done ? 'entry-done' : ''} {_index === highlightItemIndex ? 'entry-highlight' : ''}\" >\n            <input type=\"checkbox\" class=\"nes-checkbox is-dark\" checked={item.done} />\n            <span class=\"label-with-number\">\n              <div style=\"display: inline-block\">\n                <span class=\"nes-text label is-{item.colorName}\" style=\"{item.colorStyle}\">\n                {item.label}\n                </span>\n                <span class=\"nes-text is-warning\">\n                  [#{_index + 1}]\n                </span>\n              </div>\n\n              <br/>\n\n            </span>\n        </label>\n\n        {#if item.startTime || item.spentTime}\n          <div class=\"timer-badges\"\n               in:fade={{ duration: 500 }}\n               out:fly={{ x: -500, duration: 500 }}>\n            {#if item.startTime}\n              <TimeDifference startDate=\"{item.startTime}\"/>\n            {/if}\n\n            {#if item.spentTime}\n              <div class=\"nes-badge is-splited\">\n                <span class=\"is-warning\">Spent</span>\n                <span class=\"is-success\">{timeDifference(item.spentTime).string}</span>\n              </div>\n            {/if}\n          </div>\n        {/if}\n      {/if}\n    {/each}\n\n    <label class=\"entry\">&nbsp;</label>\n  </div>\n</div>\n\n<style>\n  .nes-container {\n    height: calc(100vh - 8px);\n    padding-bottom: 0;\n  }\n\n  .nes-container.auto-layout {\n    height: 100%;\n    max-height: 100vh;\n  }\n\n  .entry {\n    display: flex;\n    user-select: none;\n  }\n\n  .entry:last-of-type {\n    height: 0.5rem;\n  }\n\n  .entry-done {\n    opacity: 0.55;\n  }\n\n  .entry-done .label {\n    text-decoration: line-through;\n  }\n\n  /*TODO  add scss for easier style code */\n\n  .currently-highlighting .entry.entry-highlight {\n\n  }\n\n  .currently-highlighting .entry:not(.entry-highlight) {\n    opacity: 0.55;\n  }\n\n  .items-holder {\n    height: 100%;\n    overflow-y: hidden;\n    margin-left: -1rem;\n  }\n\n  .label-with-number {\n    max-width: 80vw;\n    display: inline-flex;\n  }\n\n  .nes-container.with-title>.title {\n    margin-bottom: 0;\n  }\n\n  .nes-checkbox+span::before, .nes-checkbox:checked+span::before {\n    top: 2px !important;\n  }\n\n  .timer-badges {\n    width: 100%;\n    margin-bottom: 1rem;\n  }</style>\n",
    "<script lang=\"ts\">import { onMount, onDestroy } from 'svelte';\nimport { timeDifference } from \"./utils\";\nexport let startDate;\nlet differenceInSeconds = 0;\nlet timerInterval = 0;\n$: difference = timeDifference(differenceInSeconds);\nonMount(() => {\n    timerInterval = setInterval(() => {\n        if (startDate) {\n            console.info({ startDate });\n            differenceInSeconds = (Date.now() - startDate) / 1000;\n        }\n    }, 1000);\n});\nonDestroy(() => {\n    clearInterval(timerInterval);\n});\n</script>\n\n\n<div class=\"nes-badge is-splited\">\n  <span class=\"is-warning\">‚è≥</span>\n  <span class=\"is-primary\"> {difference.string} </span>\n</div>\n\n<style>\n  .is-warning {\n    padding-left: 0.75rem;\n    padding-right: 0.75rem;\n  }</style>\n"
  ],
  "names": [],
  "mappings": "AA4CE,cAAE,CAAC,AAED,WAAW,CAAE,gBAAgB,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,AAClD,CAAC;AC2CD,cAAc,8BAAC,CAAC,AACd,MAAM,CAAE,KAAK,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CACzB,cAAc,CAAE,CAAC,AACnB,CAAC,AAED,cAAc,YAAY,8BAAC,CAAC,AAC1B,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,AACnB,CAAC,AAED,MAAM,8BAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,oCAAM,aAAa,AAAC,CAAC,AACnB,MAAM,CAAE,MAAM,AAChB,CAAC,AAED,WAAW,8BAAC,CAAC,AACX,OAAO,CAAE,IAAI,AACf,CAAC,AAED,0BAAW,CAAC,MAAM,eAAC,CAAC,AAClB,eAAe,CAAE,YAAY,AAC/B,CAAC,AAQD,sCAAuB,CAAC,qBAAM,KAAK,gBAAgB,CAAC,AAAC,CAAC,AACpD,OAAO,CAAE,IAAI,AACf,CAAC,AAED,aAAa,8BAAC,CAAC,AACb,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,KAAK,AACpB,CAAC,AAED,kBAAkB,8BAAC,CAAC,AAClB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,WAAW,AACtB,CAAC,AAED,cAAc,0BAAW,CAAC,MAAM,eAAC,CAAC,AAChC,aAAa,CAAE,CAAC,AAClB,CAAC,AAED,aAAa,CAAC,kCAAI,QAAQ,CAAE,aAAa,QAAQ,CAAC,kCAAI,QAAQ,AAAC,CAAC,AAC9D,GAAG,CAAE,GAAG,CAAC,UAAU,AACrB,CAAC,AAED,aAAa,8BAAC,CAAC,AACb,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,IAAI,AACrB,CAAC;AC3HD,WAAW,eAAC,CAAC,AACX,YAAY,CAAE,OAAO,CACrB,aAAa,CAAE,OAAO,AACxB,CAAC"
}